name: Build e Push de imagens docker para escuro

on:
  workflow_call:
    inputs:
      OS_VERSION:
        description: "Versão do sistema operacional"
        required: false
        default: "ubuntu-20.04"
        type: string 
      TAG_IMAGE:
        description: "Tag da imagem docker, se vazia será utilizado 8 dígitos do sha do commit"
        required: false
        type: string
        default: ""
      WORK_DIR:
        description: "Diretório do projeto"
        required: false
        type: string
        default: "."
      ECR_REPOSITORY:
        description: "Nome do repositório ECR"
        required: true
        type: string
      AWS_REGION:
        description: "Região AWS"
        required: true
        type: string
      DOCKERFILE:
        description: "Path do arquivo dockerfile"
        required: false
        type: string
        default: "./Dockerfile"
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS access key id"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS secrets access key"
        required: true
jobs:
  build:
    name: Build da imagem
    runs-on: ${{ inputs.OS_VERSION }}
    outputs:
      image:  ${{ steps.login_ecr.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configura credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
      
      - name: Login no repo AWS ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag e push da imagem para repositório AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
        run: |
          #cd ${{ inputs.WORK_DIR }}
          if [ -z ${{ inputs.TAG_IMAGE }} ] #Verifica se a var TAG-IMAGE é nula
          then
            docker build -t $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY }}:${GITHUB_SHA::8} -f ${{ inputs.DOCKERFILE }} .
            docker push $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY }}:${GITHUB_SHA::8}
          else
            docker build -t $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY }}:${{ inputs.TAG_IMAGE }} -f ${{ inputs.DOCKERFILE }} .
            docker push $ECR_REGISTRY/${{ inputs.ECR_REPOSITORY }}:${{ inputs.TAG_IMAGE }}
          fi
