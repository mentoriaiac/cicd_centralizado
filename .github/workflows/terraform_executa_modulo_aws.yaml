name: "Terraform Executa Modulo"

on:
  workflow_call:
    inputs:
      os_version:
        description: "Versão do sistema operacional"
        required: false
        default: "ubuntu-20.04"
        type: string
      aws_region:
        description: "Define a região AWS para a configuração das credenciais"
        required: true
        type: string
      tf_workspace:
        description: "Define o workspace em que o modulo será executado"
        required: false
        default: "default"
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "Credencial AWS"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "Credencial AWS"
        required: true

jobs:
  jobs_terraform:
    name: Terraform workflow
    runs-on: ${{ inputs.os_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}

      - name: Lê versão do Terraform
        id: tf-version
        run: |
          TF_VERSION=$(sed -nr 's/\s*required_version\s+=\s+"(.*)"/\1/p' *.tf)
          echo "::set-output name=version::$TF_VERSION"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.tf-version.outputs.version }}
    
      - name: Terraform Init
        run: terraform init

      - name: Terraform Workspace
        run: |
          [ "${{ inputs.tf_workspace }}"  != default ] && terraform workspace select ${{ inputs.tf_workspace }} || echo "executando no workspace default"

      - name: Terraform Plan
        run: terraform plan -out tfplan -no-color

      - name: Terraform Apply
        run: terraform apply "tfplan"
